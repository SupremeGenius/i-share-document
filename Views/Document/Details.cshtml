@model ISDProject.Models.DocumentComment
@using ISDProject.Tools

@{
    ViewBag.Title = "Details";
}
@section Scripts{
    <script src="~/Scripts/jquery.unobtrusive-ajax.min.js"></script>
    <script src="~/Scripts/chili-1.7.pack.js" type="text/javascript"></script>
    <script src="~/Scripts/jquery.media.js" type="text/javascript"></script>
    <script src="~/Scripts/jquery.metadata.js" type="text/javascript"></script>

    <script type="text/javascript">
        $(function () {
            $('.media').media({
                width: "100%",
                height: 600
            });
        });
    </script>
}
<header class="jumbotron subhead" id="overview">
    <div class="container">
        <h1>Preview</h1>
        <p class="lead">
            <a href="../"><img src="~/Content/images/left_round.png" style="height: 40px; width : 40px" /></a> @Model.Document.DocumentName
             @Html.ActionLink("Download", "Download", "File", new { fileName = Model.Document.DocumentPath }, new { @class = "btn" })
            <a class="btn btn-primary" href="#modal_share_link" data-dismiss="modal" data-toggle="modal" onclick="document.getElementById('link').value='@(_link)';document.getElementById('file').value='@item.DocumentName';">Share</a>
        </p>
        <p class="muted">@String.Format("{0:g}", Model.Document.DocumentCreation) - @Tools.GetFileSizeString(Model.Document.DocumentSize) - @Model.Document.DocumentUser</p>
    </div>
</header>

@{
    HttpContext _context = HttpContext.Current;
    String _baseUrl = _context.Request.Url.Scheme + "://" + _context.Request.Url.Authority + _context.Request.ApplicationPath.TrimEnd('/') + '/';
    String _path = Model.Document.DocumentPath.Replace("\\", "\\\\");
    String _link = _baseUrl + "File/Download?fileName=" + _path;
}

<div class="well">
    <div>
        <a class="media" href="@_link" style="width: 100%; height: 500px"></a>
    </div>
</div>

<div id="commentsList">
    @{ Html.RenderPartial("_ListComments", Model.Document.Comments); }
</div>


@using (Ajax.BeginForm("AddComment", new AjaxOptions { UpdateTargetId = "commentsList", OnSuccess = "$('#form0').get(0).reset();" }))
{
    @Html.HiddenFor(model => model.Comment.DocumentId)
    @Html.HiddenFor(model => model.Comment.CommentUserName)
    //
    @Html.HiddenFor(model => model.Document.DocumentId);
    @Html.HiddenFor(model => model.Document.DocumentName)

    @Html.HiddenFor(model => model.Document.DocumentPath)

    @Html.HiddenFor(model => model.Document.DocumentSize)

    @Html.HiddenFor(model => model.Document.DocumentRate)

    @Html.HiddenFor(model => model.Document.DocumentUser)

    @Html.HiddenFor(model => model.Document.DocumentCreation)

    @Html.HiddenFor(model => model.Document.DocumentModification)
    //

    <div class="row-fluid">
        <div class="span12">
            @Html.TextAreaFor(x => x.Comment.CommentValue, new { placeholder = "Join the discussion", @class = "input-block-level", style = "margin:0px" })
        </div>
    </div>
    <br />
    var items = new List<SelectListItem>{
        new SelectListItem {Value = "1", Text = "1"},
        new SelectListItem {Value = "2", Text = "2"},
        new SelectListItem {Value = "3", Text = "3"},
        new SelectListItem {Value = "4", Text = "4"},
        new SelectListItem {Value = "5", Text = "5"}
    };

    @Html.DropDownListFor(x => x.Comment.CommentRate, items)

    <br />
    <div class="row-fluid">
        <div class="span12">
            <input class="btn btn-primary" type="submit" value="Add Comment" />
            <button class="btn" onclick="$('#form0').get(0).reset();" type="button">Clear</button>
        </div>
    </div>
}



